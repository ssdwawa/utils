import React from 'react';
import { Router, Route, Switch } from 'react-router-dom';
import { Redirect } from 'react-router'
import history from '../utils/history'
import { Provider } from 'mobx-react';
import { RouterStore, syncHistoryWithStore } from 'mobx-react-router';
import store from '../stores/index';

import IndexPage from '../pages/index/index'

const routerStore = new RouterStore();
const bindhistory = syncHistoryWithStore(history, routerStore);
store.router = routerStore
class Routes extends React.Component {
    constructor(props) {
        super(props)
    };

    render() {
        return (
            <div>
                <Provider {...store}>
                    <Router history={bindhistory}>
                        <div>
                            <Route path="/" component={IndexPage} />
                        </div>
                    </Router>
                </Provider>,
            </div>
        )
    }
}

export default Routes


stors
  import TestStore from './TestStore';

  export default {
      testStore : new TestStore()
  }
  
  
  
  import { observable, action, computed } from 'mobx';
  import { data } from '../mock/data';

  export default class AppState {

      @observable dateList = [];
      @observable choiceDate = null;
      @observable dataList = [];

        constructor() {
            onBecomeObserved(this, 'dateList', this.resume)
        }
   
        resume = () => {
            Ajax.get(API.effective_dates).then((res) => {
                this.dateList = res.data.Date,
                this.choiceDate = res.data.Date[0]
            })
        }

          @computed get totalPrice() {
              let total = 0;
              this.list.forEach((item, i) => {
                  if (item.checked) {
                      total += this.list[i].buyNum * this.list[i].price;
                  }
              });
              return total;
          }

  }
  
  
  page
    @inject('testStore')
    @observer
    class IndexPage extends React.Component<indexProps, {}> {
  
  
  
